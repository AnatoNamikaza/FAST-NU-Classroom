Task_1:
-------

int MaxSubArray(A, n)
{
	globalSum = Arr[n],
		Max[n] = A[n];
	for (i = n - 1 to 2)
	{
		Max[i] = MaxValue(Max[i + 1] + A[i], A[i]);
		globalSum = MaxValue(Max[i], globalSum)
			globalStart = Max[i]
	}
	return globalSum;
}
_________________________________________________________

Task_2:
-------

Shown:
 
i	|	Max_Array_Sum	|	Max_Sum
----------------------------------------------------------
1	|	2		|	2
2	|	2		|	-2
3	|	3		|	1
4	|	7		|	5
5	|	7		|	2
6	|	9		|	7
7	|	9		|	2
8	|	10		|	8
9	|	10		|	7
_________________________________________________________

Task_3:
-------

Shown:

 
i		|	1	2	3	4	5	6	7	8	9
--------------------------------------------------------------------------------------------
A[i]		|	2	-4	3	4	-3	5	-5	6	-1
Max[i]		|	2	-2	3	7	4	9	4	10	9
A[i]+Max[i-1]	|	N\A	-2	1	7	4	9	4	10	9

So, GlobalSum = 10
_________________________________________________________

Task_4:
-------

int MaxSubArray(A, n)
{
	globalSum = Arr[1],
		Max[n] = A[1];
	for (i = 2 to n)
	{
		Max[i] = MaxValue(Max[i + 1] + A[i], A[i]);
		globalSum = MaxValue(Max[i], globalSum)
	}
	return globalSum;
}
_________________________________________________________
		Thank You ðŸ˜‰